random matrices with entries from QQ, num_bound=100, dbound=den_bound

varied matrix size as well as denominator bounds to test differences between methods


		50x50 (dbound 100)	50x50 (dbound 1000)	100x100 (dbound 100)	100x100 (dbound 1000)	200x200 (dbound 100)	200x200 (dbound 1000)

solve_right	1.956			13.297			30.378, 28.357		605.603			780.631			31895.374
ppl_poly	0.315			0.857			5.611,  5.426		5.597			152.508			1176.967
npoly		18.292			136.304			crash,  crash		crash			crash			crash


note: npoly (polyhedral computation with backend 'normaliz') only worked on small matrices, large ones required more memory than my laptop had and took hours

So, it appears ppl_poly is significantly faster than solve_right with QQ matrices



results for dens=0.5 

		50x50 (dbound 100)	50x50 (dbound 1000)	100x100 (dbound 100)	100x100 (dbound 1000)	200x200 (dbound 100)

solve_right	0.904			4.716			16.852			166.166			506.772
ppl_poly	0.243			0.519			3.639			13.167			98.995