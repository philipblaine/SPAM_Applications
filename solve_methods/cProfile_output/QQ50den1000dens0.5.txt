sage: A4 = make_matrix_with_dens(50,50,100,1000,0.5)
sage: Y4 = make_matrix_with_dens(50,1,100,1000,0.5)
sage: cProfile.run("sol4 = A4.solve_right(Y4)")
         372806 function calls in 4.716 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     2762    0.008    0.000    0.017    0.000 <frozen importlib._bootstrap>:1009(_handle_fromlist)
     2439    0.006    0.000    0.009    0.000 <frozen importlib._bootstrap>:416(parent)
        1    0.000    0.000    4.716    4.716 <string>:1(<module>)
      317    0.001    0.000    0.001    0.000 additive_magmas.py:209(__init_extra__)
      317    0.002    0.000    0.004    0.000 category.py:2511(category)
      317    0.001    0.000    0.002    0.000 category.py:3054(is_subcategory)
      317    0.002    0.000    0.002    0.000 category.py:419(__classcall__)
      317    0.001    0.000    0.001    0.000 category.py:648(_subcategory_hook_)
      317    0.002    0.000    0.062    0.000 category.py:710(__classcontains__)
    14899    0.027    0.000    0.046    0.000 category.py:750(<genexpr>)
      317    0.000    0.000    0.000    0.000 category.py:938(all_super_categories)
      317    0.002    0.000    0.002    0.000 dynamic_class.py:127(dynamic_class)
      318    0.003    0.000    0.008    0.000 fields.py:63(__contains__)
      317    0.000    0.000    0.000    0.000 finite_sets.py:42(is_finite)
      555    0.001    0.000    0.001    0.000 integer_mod_ring.py:1022(characteristic)
    78672    0.071    0.000    0.071    0.000 integer_mod_ring.py:1082(order)
      555    0.003    0.000    0.005    0.000 integer_mod_ring.py:191(get_object)
      555    0.001    0.000    0.001    0.000 integer_mod_ring.py:199(create_key_and_extra_args)
      555    0.001    0.000    0.002    0.000 integer_mod_ring.py:236(is_IntegerModRing)
     1113    0.011    0.000    0.023    0.000 matrix_space.py:101(get_matrix_class)
      556    0.001    0.000    0.001    0.000 matrix_space.py:1684(is_sparse)
    79233    0.070    0.000    0.070    0.000 matrix_space.py:1924(ncols)
    79233    0.077    0.000    0.077    0.000 matrix_space.py:1936(nrows)
     1113    0.012    0.000    0.148    0.000 matrix_space.py:446(__classcall__)
      317    0.015    0.000    0.105    0.000 matrix_space.py:512(__init__)
        1    0.000    0.000    0.000    0.000 matrix_space.py:752(__call__)
      139    0.000    0.000    0.000    0.000 matrix_space.py:851(change_ring)
      694    0.012    0.000    0.030    0.000 misc.py:1196(previous_prime)
    38781    0.107    0.000    0.107    0.000 misc.py:1874(xgcd)
     6060    0.025    0.000    0.051    0.000 misc.py:273(cputime)
      139    0.001    0.000    0.231    0.002 misc.py:3276(CRT_basis)
      139    0.119    0.001    0.225    0.002 misc.py:3317(<listcomp>)
     5373    0.010    0.000    0.018    0.000 misc.py:475(is_prime)
     6060    0.014    0.000    0.065    0.000 misc.py:503(verbose)
      317    0.004    0.000    0.020    0.000 modules.py:113(__classcall_private__)
      555    0.001    0.000    0.001    0.000 parallelism.py:250(get)
        1    0.000    0.000    0.000    0.000 proof.py:169(get_flag)
      317    0.001    0.000    0.002    0.000 sets_cat.py:945(_element_constructor_)
      317    0.002    0.000    0.110    0.000 unique_representation.py:994(__classcall__)
      317    0.001    0.000    0.003    0.000 vector_spaces.py:39(__classcall_private__)
        2    0.000    0.000    0.000    0.000 vt100_input.py:278(_input_parser_generator)
      317    0.001    0.000    0.001    0.000 weakref.py:336(__new__)
      317    0.001    0.000    0.001    0.000 weakref.py:341(__init__)
      317    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x7f21ccee7a40}
      317    0.013    0.000    0.057    0.000 {built-in method builtins.any}
        1    0.000    0.000    4.716    4.716 {built-in method builtins.exec}
     4189    0.009    0.000    0.009    0.000 {built-in method builtins.hasattr}
    25005    0.030    0.000    0.030    0.000 {built-in method builtins.isinstance}
      317    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
      139    0.000    0.000    0.000    0.000 {built-in method builtins.len}
     6060    0.019    0.000    0.019    0.000 {built-in method resource.getrusage}
      317    0.001    0.000    0.001    0.000 {built-in method sage.rings.ring._is_Field}
      555    0.002    0.000    0.002    0.000 {function IntegerModFactory.get_object at 0x7f21c1f4e378}
      317    0.001    0.000    0.001    0.000 {method 'categories' of 'sage.structure.category_object.CategoryObject' objects}
      317    0.000    0.000    0.000    0.000 {method 'category' of 'sage.rings.ring.Ring' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
      555    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     5373    0.008    0.000    0.008    0.000 {method 'is_prime' of 'sage.rings.integer.Integer' objects}
     2439    0.003    0.000    0.003    0.000 {method 'rpartition' of 'str' objects}
        1    4.007    4.007    4.716    4.716 {method 'solve_right' of 'sage.matrix.matrix2.Matrix' objects}
      317    0.003    0.000    0.108    0.000 {sage.misc.classcall_metaclass.typecall}
      139    0.005    0.000    0.005    0.000 {sage.misc.misc_c.prod}
      555    0.001    0.000    0.001    0.000 {sage.rings.finite_rings.finite_field_base.is_FiniteField}


sage: cProfile.run("poly4 = ppl_poly_solve(A4,Y4)")
         33527 function calls (33526 primitive calls) in 0.519 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      109    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1009(_handle_fromlist)
        1    0.000    0.000    0.519    0.519 <string>:1(<module>)
        1    0.001    0.001    0.519    0.519 <string>:10(ppl_poly_solve)
        1    0.000    0.000    0.000    0.000 <string>:113(get_poly_verts)
        1    0.004    0.004    0.519    0.519 <string>:92(make_ppl_poly)
        1    0.000    0.000    0.001    0.001 <string>:99(<listcomp>)
     5100    0.009    0.000    0.014    0.000 abc.py:137(__instancecheck__)
       50    0.003    0.000    0.014    0.000 backend_ppl.py:129(<listcomp>)
       50    0.001    0.000    0.001    0.000 backend_ppl.py:130(<listcomp>)
        1    0.000    0.000    0.405    0.405 backend_ppl.py:141(_init_Vrepresentation_from_ppl)
        1    0.000    0.000    0.000    0.000 backend_ppl.py:164(<listcomp>)
        1    0.003    0.003    0.003    0.003 backend_ppl.py:170(<listcomp>)
        1    0.001    0.001    0.034    0.034 backend_ppl.py:179(_init_Hrepresentation_from_ppl)
        1    0.036    0.036    0.491    0.491 backend_ppl.py:96(_init_from_Hrepresentation)
        1    0.000    0.000    0.491    0.491 base.py:119(__init__)
        1    0.000    0.000    0.000    0.000 base.py:1635(Vrepresentation)
        1    0.000    0.000    0.000    0.000 base.py:1839(vertices_list)
        1    0.000    0.000    0.000    0.000 base.py:1873(<listcomp>)
        2    0.000    0.000    0.000    0.000 base.py:1875(vertex_generator)
        1    0.000    0.000    0.000    0.000 category.py:419(__classcall__)
      2/1    0.000    0.000    0.000    0.000 category_with_axiom.py:1966(__classcall__)
        1    0.000    0.000    0.510    0.510 constructor.py:302(Polyhedron)
     2551    0.004    0.000    0.007    0.000 constructor.py:614(<genexpr>)
        1    0.000    0.000    0.000    0.000 dynamic_class.py:127(dynamic_class)
        1    0.000    0.000    0.000    0.000 family.py:405(<dictcomp>)
        1    0.000    0.000    0.000    0.000 family.py:53(Family)
        1    0.000    0.000    0.000    0.000 family.py:536(__init__)
        1    0.000    0.000    0.000    0.000 family.py:586(keys)
       51    0.000    0.000    0.000    0.000 fields.py:63(__contains__)
        1    0.000    0.000    0.001    0.001 finite_dimensional_modules_with_basis.py:343(dense_coefficient_list)
        1    0.000    0.000    0.000    0.000 finite_dimensional_modules_with_basis.py:369(<listcomp>)
        1    0.000    0.000    0.001    0.001 finite_dimensional_modules_with_basis.py:371(_vector_)
        1    0.005    0.005    0.010    0.010 flatten.py:6(flatten)
        1    0.000    0.000    0.000    0.000 flatten.py:67(<listcomp>)
      102    0.000    0.000    0.000    0.000 free_module.py:1871(degree)
      101    0.000    0.000    0.000    0.000 free_module.py:1959(coordinate_ring)
      101    0.001    0.000    0.001    0.000 free_module.py:2364(zero_vector)
      100    0.000    0.000    0.000    0.000 free_module.py:327(create_key)
       50    0.000    0.000    0.000    0.000 free_module.py:397(VectorSpace)
      101    0.000    0.000    0.002    0.000 free_module.py:5577(_element_constructor_)
      101    0.000    0.000    0.001    0.000 free_module.py:972(_element_constructor_)
     2550    0.007    0.000    0.012    0.000 functional.py:236(denominator)
       51    0.000    0.000    0.001    0.000 matrix_misc.py:28(row_iterator)
        1    0.000    0.000    0.001    0.001 matrix_space.py:1504(basis)
        1    0.000    0.000    0.000    0.000 matrix_space.py:1524(<dictcomp>)
       50    0.000    0.000    0.000    0.000 matrix_space.py:1924(ncols)
       50    0.000    0.000    0.000    0.000 matrix_space.py:1936(nrows)
        5    0.000    0.000    0.000    0.000 misc.py:56(_make_listlist)
        1    0.000    0.000    0.000    0.000 misc.py:80(<listcomp>)
        1    0.000    0.000    0.000    0.000 misc.py:83(_common_length_of)
       50    0.000    0.000    0.000    0.000 parent.py:228(ambient_dim)
        1    0.000    0.000    0.000    0.000 parent.py:25(Polyhedra)
       50    0.000    0.000    0.001    0.000 parent.py:352(Vrepresentation_space)
        1    0.000    0.000    0.491    0.491 parent.py:453(_element_constructor_)
       50    0.000    0.000    0.033    0.001 parent.py:887(_make_Equation)
        1    0.000    0.000    0.000    0.000 parent.py:914(_make_Vertex)
        1    0.000    0.000    0.000    0.000 representation.py:1193(is_vertex)
       50    0.001    0.000    0.004    0.000 representation.py:322(__init__)
       50    0.015    0.000    0.029    0.001 representation.py:341(_set_data)
        1    0.000    0.000    0.000    0.000 representation.py:61(__len__)
       51    0.000    0.000    0.000    0.000 representation.py:74(__getitem__)
        1    0.000    0.000    0.000    0.000 representation.py:948(__init__)
        1    0.000    0.000    0.000    0.000 representation.py:965(_set_data)
        1    0.000    0.000    0.000    0.000 sets_cat.py:945(_element_constructor_)
        1    0.000    0.000    0.000    0.000 vt100_input.py:278(_input_parser_generator)
     5100    0.005    0.000    0.005    0.000 {built-in method _abc._abc_instancecheck}
        1    0.002    0.002    0.009    0.009 {built-in method builtins.any}
        1    0.000    0.000    0.519    0.519 {built-in method builtins.exec}
      110    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
     5257    0.005    0.000    0.005    0.000 {built-in method builtins.isinstance}
     2760    0.002    0.000    0.002    0.000 {built-in method builtins.len}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
       50    0.000    0.000    0.000    0.000 {built-in method sage.arith.functions.LCM_list}
     2551    0.002    0.000    0.002    0.000 {built-in method sage.structure.element.parent}
       50    0.000    0.000    0.000    0.000 {method '__copy__' of 'sage.matrix.matrix_rational_dense.Matrix_rational_dense' objects}
       50    0.000    0.000    0.000    0.000 {method '__getitem__' of 'dict' objects}
     2653    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}
      203    0.000    0.000    0.000    0.000 {method 'base_ring' of 'sage.structure.category_object.CategoryObject' objects}
       50    0.000    0.000    0.000    0.000 {method 'coefficients' of 'ppl.constraint.Constraint' objects}
        1    0.000    0.000    0.000    0.000 {method 'coefficients' of 'ppl.generator.Generator' objects}
       52    0.000    0.000    0.000    0.000 {method 'degree' of 'sage.modules.free_module_element.FreeModuleElement' objects}
     2550    0.002    0.000    0.002    0.000 {method 'denominator' of 'sage.rings.rational.Rational' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'divisor' of 'ppl.generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 {method 'empty' of 'ppl.constraint.Constraint_System' objects}
       50    0.000    0.000    0.000    0.000 {method 'inhomogeneous_term' of 'ppl.constraint.Constraint' objects}
       50    0.000    0.000    0.000    0.000 {method 'insert' of 'ppl.constraint.Constraint_System' objects}
       50    0.000    0.000    0.000    0.000 {method 'is_equality' of 'ppl.constraint.Constraint' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_exact' of 'sage.rings.ring.Ring' objects}
       50    0.000    0.000    0.000    0.000 {method 'is_field' of 'sage.rings.ring.Field' objects}
       50    0.000    0.000    0.000    0.000 {method 'is_inequality' of 'ppl.constraint.Constraint' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_one' of 'sage.rings.integer.Integer' objects}
        1    0.000    0.000    0.000    0.000 {method 'is_point' of 'ppl.generator.Generator' objects}
        1    0.000    0.000    0.000    0.000 {method 'minimized_constraints' of 'ppl.polyhedron.Polyhedron' objects}
        1    0.402    0.402    0.402    0.402 {method 'minimized_generators' of 'ppl.polyhedron.Polyhedron' objects}
        1    0.000    0.000    0.000    0.000 {method 'ncols' of 'sage.matrix.matrix0.Matrix' objects}
        2    0.000    0.000    0.000    0.000 {method 'nrows' of 'sage.matrix.matrix0.Matrix' objects}
        1    0.000    0.000    0.000    0.000 {method 'one' of 'sage.rings.ring.Ring' objects}
       55    0.000    0.000    0.000    0.000 {method 'parent' of 'sage.structure.element.Element' objects}
        1    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
       51    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       50    0.001    0.000    0.001    0.000 {method 'row' of 'sage.matrix.matrix_rational_dense.Matrix_rational_dense' objects}
       50    0.000    0.000    0.000    0.000 {method 'set_immutable' of 'sage.matrix.matrix0.Matrix' objects}
        1    0.000    0.000    0.001    0.001 {sage.modules.free_module_element.vector}


sage: A4.str()
'[  32/799       10  -29/578        1        8  -51/121        5        8    17/71   23/261   -7/332  -27/260        8   13/168        7   85/514        4        1        8   -3/899       10   -1/576        6   -9/332       10        3   84/983   89/149    6/757  -44/615        9        1        8       25        4  -67/766        7  -30/161        5        7        8        1        5 -100/719    -3/35  -62/941   52/911   19/314        6   -47/87]\n[       3   34/751   -1/171   17/943   -2/163  -32/273        3  -55/371        9  -14/207   17/249    95/11        2       10       10        7  -23/550  -74/625        2        7   96/877        5        2   -2/295  -15/418   89/430  -51/355        9        7        8        4        9   23/156        7   84/323  -85/299        2        1        9   29/361  -95/983    33/50        3        8   29/790        6   19/198        6   93/512        7]\n[ -69/799        2        1        7     3/28        4  -65/659        2   81/155        8   -1/323   14/603  -14/313    33/85   25/226  -95/714  -13/467        5   64/215    1/227        7        5    8/101        9        9    -6/13   13/629        8   25/133       10        5   -10/11       32        8        1        5        8    62/71        1        1        9   -26/81        3   43/259    7/146        2     6/71  -74/181  -40/297   -14/39]\n[ -46/591    38/55     6/77  -11/174        4  -16/203   65/907        8   58/151  -39/310        7        8  -36/373        5   51/562    2/395  -75/338     3/98    9/358        1        4   34/635  -52/781     3/28  -15/956        3        6   32/157   17/227  -29/366        6        2        1   -29/41  -28/267        8        9   27/373        5       10        2        6        3        8       10  -41/308   71/629  -47/675        7   47/127]\n[       9     3/16        5        9   -9/637  -33/500        7        4        1        6  -38/173        3  -23/583        9        6        2        4       10        2        9   -53/82        2        2        1        7        6  -47/475        5        5       10    7/314       10        5  100/571   29/225        6        6    19/47   38/487        3    -7/76  -52/877  -91/188    2/163    3/223  -19/301    -2/33     8/37   26/815        5]\n[   -1/18       10        7        8        1  -37/408       10        6   24/115  -85/749        9   -13/32  -72/751        5        5        3    1/629        4   14/339   80/179        9  -48/257        3        1        6        0   31/118        4   -8/135       10   19/426        9     9/50       10        1        7   35/712   -23/39        6    -2/13  -89/663       10        9        1   69/182    5/799    -9/14        6        8   34/283]\n[ -89/345        3  -74/867        2       10   27/275   48/127       10        6        6        4        9    -1/76        7        9  -11/388        5        1        5        1   -94/15  -19/135        7        5   -84/55  -88/221  -34/887       10    25/89   -97/12   39/478  -21/223        9        8   59/419    47/37        1        3     3/28        9   -76/83   82/939        1        4    -1/20        1        2    3/134    47/90        6]\n[   5/256        4        9   67/879        8       10        7        9        3   65/843        7  -31/488        9        9       10   45/361   47/115        3   -53/98  -95/704   41/412        3        6        4     15/8   -1/140   11/163   28/317        3  -10/189        9  -64/361        5        8        8    53/41        4        2   68/339   -31/61       10        6  -82/299        9        1        1        8   92/499        8   25/456]\n[       2  -63/197      9/2        7     39/7        0  -31/313   25/766        3        9        1     87/2        8       10        3       10   25/387   -9/112        7        8  -77/164    -1/50        2        8  -81/196   18/175   13/205   56/827        3   97/768        4        7        5    7/149   -23/57  -11/938   33/358        9        4      -11    1/777  -62/707  -21/208        2        5   -9/157    3/140        7   -51/80        6]\n[       2  -15/109        4        7        2  -20/693        2        7        8   32/109        2  -49/908   81/338   19/328        2        8        8        7        3        3  -84/733    1/790        1    3/683    3/475        4        6        1  -29/181        2    1/866       10  -25/974     -1/8        4  -17/328  -38/919        2    11/36        3   70/503        2    3/346  -16/129  -55/289       10        2        5        5   77/310]\n[  -11/46  -43/113        9        5     1/41        2  -46/545        8   -4/141        5       10   70/579  -95/403        1        4        6        1        4  -13/178    15/61        9  -21/436   34/265        8        1  -74/825    23/61  -19/243        3   83/663   41/127  -44/885        1        6   27/856        7        8        6       10        5   93/278   -2/241        4        4       10        6   23/327   77/857      1/3        7]\n[       1    -9/23        6   80/967   59/867        8   66/197        8      1/3        2       10  -37/233        7        3  -85/934   62/143        8        4   31/875        4   59/736        1        2        7    -2/29  -47/683   35/491   -3/103   34/325        4  -94/449       10   -9/115        2   46/143   79/238        4    -2/15   -21/58        5        4        9        6  -53/336        6        1        3       10   -9/989  -67/778]\n[     1/9   49/899       10  -95/263   61/409    -1/57        4        5   30/499       10   45/161   43/661        7        8       10   71/690  -79/199        1   11/956   94/793        2        4   16/517        3  -61/349        7       10        4   41/786   52/373  -38/905        6   -3/235  -68/807   18/127        6        5        6        6  -33/175        2        5        4   19/146        3        1      -91       10   85/113   59/296]\n[ -11/162  -17/229   -63/38     7/69        3     3/32       10        2       10        8        5    -5/28    7/209        5   17/725        6        5       10        2   36/287     5/61        4        4   -7/863   76/989        7   -2/187        9   10/743  -30/199        4   -3/356        3        7   -87/20        6        1      -30   -45/76        5  -53/224        2  -68/943   95/402        9   38/337        2   72/935    9/247       10]\n[       8        3   28/271   -65/41       10  -67/356    6/499        9        3    -7/94    11/40   79/573        9        6        1   37/342        2   31/549       10        0        1        7  -43/343  -91/803        4        2   -9/845        1  100/941        2        1        7        6        7  -93/226   37/301        7       10        1       10        6        2        2        9        9       10        2        4     91/2        1]\n[       6    21/58        7  -65/362        3  -89/511  -33/212   10/197  -53/541   34/213    -1/35    2/113   50/459   -26/81       10    11/65        8        8   48/347        6  -76/757        1        7        9  -41/650        9        6  -49/114        7        6       10  -37/721        7  -97/704   -8/139  -23/310       10        8   17/311        9  -23/212        5  -57/596        1     -6/5  -96/589        5        5        9    13/68]\n[       8    27/28        8  -97/935  -31/153        1        4        5  -13/842        5  -26/565    -2/51        9   -7/130   76/401   79/700        6        6     9/47  -27/676        3        3        9        8       10        5        8   25/804        2   -9/142  -19/667    -1/24       10   20/613        5       10        5        2  -21/494        8     -1/3        9        4        8        8   -2/143        9        3        3  -40/299]\n[ -82/277        8  -34/111     3/20        2    13/35        2        1   -33/17   11/304   29/906  -20/117        5   79/540   37/206   22/251        3  -94/867        5  -25/327   11/153    7/603     7/24   23/199        7        7   83/614   87/871        6  -39/149        7        6        9   43/757    1/120        2  -58/303        8       10        1   71/597       10        2   -17/19        5  -25/898        4        3   43/343  -83/660]\n[       3        9        1   14/461        9        8       10        9  -40/191        7    25/59        3        8        3        9        4  -51/265    32/25   33/254        6        9   11/657  -63/488        2        1  -62/679  -29/329  -41/134  -92/757   83/691    -4/51        3       -1   24/553        1        6        4       10   71/854   53/409  -67/269        5        6        7   66/541     1/18   49/477  -40/209   14/125        9]\n[       2        1    39/53   31/243   -4/265   23/993  -28/151        3        3        3        7       10   51/769   -33/94        9    -3/47        8  -87/566   47/322  -26/641       10        5        7   36/989   43/376        6        9        3        9        7       10   -20/33        1        5       10  -69/688        4        1     1/79  -98/447  -34/675    -2/77        2    35/52        6        4        7  -19/116   17/254        6]\n[   -3/58        0        4    2/249   11/739        7  -42/377   35/929        7        5        7   66/145        3        9    -3/47        7  -89/642   63/346       10        1        9        1        6        3        1   79/857    -9/91   -2/309    1/457   28/953   -11/14   -99/94   51/298    34/37    13/68  -36/925   -8/163        7     -3/8  -83/395   -5/214   73/796  -97/153        9  -59/727        2     9/34       10   49/242        8]\n[ -23/652        7  -13/463  -91/342     8/71    -7/43   25/426       10       10        6  -19/508        2  -86/819        5        5        8        6        2       10    9/116  -22/155       10  -43/373   20/349  -40/229        1  -75/647  -16/339       10       10    8/135        5        1  -22/623   58/837        9   68/161        9  -21/184    9/184    47/98     1/47        8        8        8  -13/180        5        4        8  -29/158]\n[  38/235  -88/965        7  -46/433   33/580    16/83   49/129       10   35/128   71/478   19/130        5        8        4        7  -36/251   18/893        9       10        1   -34/35    -1/25        5        9       10   31/213   91/982   49/177        6  -87/821        8        1        8        4  -27/259        8        8        2     9/89   -9/115        9        1        6        2    6/227   -11/20        9        4        8  -57/640]\n[       7        4        5        1        3   25/703        8        7        6  -44/463  -43/549   76/417  -83/628  -47/983   77/815        3        6        5   -1/219   -11/36   61/354        8        3  -23/165    42/83       10        2   17/502        2        0        5  -33/541        3    16/75  -27/475   21/754  -87/223    8/291   34/611  -99/361  -45/502        3    -1/37        6  -64/773        2        8     7/15        3   -39/95]\n[       1       10  -67/741   24/151  -18/469   29/269   -31/41        6       10    -4/59        1   11/267  -61/163        9        4        5       10   79/653   31/853    17/58        4        9   28/293   -71/68        4  -50/517   57/920  -48/475  -80/853   -4/623        7        9   33/194  -15/116        3  -45/458  -86/303   67/317  -32/341        6        1  -79/830       10        9  -20/813        1   53/489        4   66/925    -51/4]\n[ -71/152        3        8        9        2        3        8        9       10   -35/64     -1/7    -1/11     1/13        9   59/542        4        9        7  -77/663  -50/509    -5/41        2        2   78/545       10  -32/727        6        4        2  -98/677        7        9   -13/29        9   55/973       10   -2/443        7        2        4   18/557        6        9   23/752        4       10   89/833        2        5        7]\n[       9        1        6        6      1/4   95/491        3        9   26/437       10  -95/109        8        6    5/249        4        3  -49/829        1        4  -42/701        8        9        5        7        7    10/49        2   50/407  -34/383  -11/185        6  -89/842   -47/65  -71/171       10  -32/495        9  -77/954        6   74/977        5        2        3  -14/121        6  -87/316  -25/177   -7/129       10        8]\n[  34/933        2        1        6        2   40/903   71/433   -1/666       10   91/790  -85/644       10     7/41    10/79       10   46/957        4        5        3        5        2  -84/437        8  -57/497  -27/643   21/320       10        5        9   23/392        5       10  -31/202        5        4   21/289    -9/92        9       10   97/281        2        4  -42/577        9        8        1   99/433  -59/922        1        7]\n[       5        2        9        4        8        4   91/244  -68/603  -25/249        9        4   91/894        6        7   57/485        3    7/197  -32/277   17/328    56/85        1        9        3        7    -3/31        3       10   99/980       10    8/389        8    -7/48        8        7   -1/336   63/326   -5/239  -59/205  -33/998   41/138  -29/178        5        8        2      1/2  -44/507     4/35  -63/232        5    2/783]\n[  31/983       10      1/2        8        4  -55/827        9        8  -93/697   65/349   61/430  -31/298  -38/309   27/656        1        8        8   13/245   32/967        4  -85/659       10        1   33/295        1        4        3      -24     -1/7   10/309  -45/359   33/284  -29/307        2  -46/463       10        3        6        9   -5/852        1        3   -8/133   88/599        2        5       10        1   -10/57        3]\n[      10  -19/116        5  -71/113        3    -2/17       -1        7        2  -79/785   -89/96       10   62/627  -37/457        6        8     -1/4        8        4        3        3        2  -95/939       10  -92/685   64/309    12/77   -13/10        8        8        8        1   23/337  -22/965   79/998     5/76        2    30/61   -11/89    11/48  -38/549       10   -97/77  -63/398        4  -12/503  -93/196  -15/629        4        1]\n[       6        7        4       10   77/276        4   97/982  -61/129   79/196        7   37/484   71/925        7  -16/197     3/92  -63/262        3   14/341   12/101        1     9/71        1  -36/157  -42/103        6        9        3        6        1   11/450        8   49/254        9    11/65        5   89/335  -47/337        3  -80/251        8        1   -5/289        5    -5/12  -98/681        4  -49/299        3        7        9]\n[ -33/310  -71/727        1        7   43/429       10        5        2        3    -7/38    -5/69     5/58  -39/332        6  -82/945   -2/139    -1/24   -18/31        7        4        7        3     1/88    19/33        1   41/858        7    5/779        7        3        6        5   -1/154   47/984  -83/654   13/109    2/469  -98/265   -43/93        4   13/823  -12/373  -76/523    15/41        4   11/578        8        3        2  -45/182]\n[       1   43/846    3/100    31/38        4        7        6        4  -47/842   92/393     1/14  -19/143   -34/11   32/225   90/191        5   42/377  -11/131        3  -43/284   44/717    89/20        7       10  -75/976        4        3   27/943    1/424       10  -25/937        8        2    -1/17        2   20/149        9   41/263        2        6        2   22/419        5        9  -12/289    13/46        6   -39/38    56/87     5/11]\n[  80/527    2/217  -19/820        8        4   51/569        7   85/836  -97/506  -41/172  -77/985        1        5        2  -59/578  -33/325        8        8        3        8    3/122        3  -62/921        5   47/716  -20/233        3  -88/947   29/241   71/510  -19/626  -33/736  -61/349   60/631        7        1        1   77/450        4    -8/15        2   69/980        3     3/62        9        4    -4/49  -47/121        1        4]\n[ -90/119  -33/316        6        8   63/313   99/314  -47/342        9   -5/329    -1/27   31/191   55/182    42/61        5        8       10        4        2   31/333        8    3/202   31/784    78/97  -95/732        1        9    4/255        6   39/769        8        5        2  -41/326        1        7        4    1/960   46/307    1/735        6   -83/76  -29/958        9       10        1        3  -61/536        3        2       10]\n[       5        1   42/235        2       10        9       10        8        5       10        7        8        2        8    -1/18   -21/41   -4/121        9        2   98/911        2        9        3        7        9        1        5  -13/287  -14/935  -12/163   29/430        3        5  -38/643   23/197        2        2    59/50        5   -1/136  -43/439  -37/340   17/250        7  -93/982        2        5        8   19/240    9/355]\n[  47/318   97/268        4       10   -14/47    2/131        6   97/272       10        9  -75/749        2  -25/428        7        5        9        1   65/908  -37/488        7        3    5/162        3   -13/48        7    -8/25    19/61        6        2    -3/17  -13/140        1   22/325   71/751        4  -74/933   65/196        9   41/825   -47/80   62/451        8   45/509        1        1        1   41/961        9       10        8]\n[       9   70/359  -27/190   71/237        4    -5/36        1   15/193  -68/929    -7/23        4        5        4   -8/127        1   81/553  -35/236  -87/796        1 -100/831       10       10   29/278    -1/50        9  -13/332       10        9     6/55   -7/111        3    5/139   56/257        3    -1/10   67/584        7        5        2  -91/869        9   -6/223  -49/716        8  -33/137       10        6        8   -97/87        9]\n[       5    8/827        2      5/4    20/71        9  -13/589   -37/91   -35/83        8  -36/877        8        8        7    -1/12    45/82   99/229   22/167    -2/25   97/870       10        9        6        2  -55/596  -35/639   68/987        1    -1/60        9  -71/567        1   27/391        6        2       10   20/237   45/223        9    65/83  -81/790  -38/455   -4/395 -100/757        7        6        5   64/969        8   62/615]\n[ -11/200        5  -61/328        3  -75/523        9  -31/111        9        3        7    2/299  -37/519        4        5        5       10        5    14/71   19/130       10   94/921        7     6/31     3/26   -7/325        5       10     7/73     5/31        4   13/678        9  -21/361        1    2/807  -32/173   11/304        4   66/893        4   23/221  -64/557        2  -53/491    81/76   -89/42        1   58/669  -83/684  -85/936]\n[      10     3/49        3        4        7       10       10        6        3       10  -16/481        2   -92/35        8        8        6   29/301   87/728  -92/399        3       10        7  -36/155        8       10        3   12/107   -9/662  -44/431  -95/407       10        7   38/689        5     3/88        7        2  -42/871        5  -92/583     1/15        5        2  -44/445        1    4/101       10  -41/234        6     6/83]\n[       9        2  -20/577        9       10   13/486        6   31/107        7        1        4   11/251   59/232        9    1/128        2   -9/866    13/17        3   -7/125  -97/341   53/497  -96/751        8   -3/347  -65/622  -27/460        3   25/283  -26/279  -63/296        5   87/670        8   97/938        7   75/128     1/20   51/535   13/102        7   76/267       10        6        2        1        8        7       10   50/151]\n[  27/485   96/859        5        8  -17/994   -15/11        6        7       10        9        6        2        2        7     5/96        1  -38/929   47/280        5    -5/49        5        1  -69/296        8        6        7    87/71        5   99/878    -5/48   51/658  -55/162  -91/452   -4/337  -75/139        2        8   71/306   23/486        1        2        1        0  -73/523     9/94        6   95/113   51/403  -36/287        1]\n[       3   91/704        4  -49/545  -69/235   52/133        2        8        9   17/412        2        8        2        6        2   14/135        4   39/166   82/199        6   -6/143  -65/163  -29/483   61/802        4        8        5        1        1        5        8        7   16/571       10   -8/371  -23/535       10  -78/727        2        2        9   92/571        4   23/540        5   15/128   19/374        8   20/477        4]\n[       1  -11/164    -2/13        8       10        1   36/815        4   -19/78   16/221   53/732   -31/20   -3/235        5        5        2        5   -23/10    6/143   75/653        3   63/733  -28/143   42/769        7   -1/171        6       10    3/635  -71/837     8/97   80/831       10  -18/175        9        9    29/89        2        3   10/247       10   24/401        7    -1/94  -63/341       10    7/214  -95/862  -72/931  -41/286]\n[       5        1   71/764  -38/255        8        1        6    12/79        4        7  -52/251    74/87        4  -11/527   15/149        5        8        8        8   -3/254        7       10    1/264        3        3        6        2        4        7       10        6     -1/3  -83/407  -87/743        4        3        7  -43/677    7/319   53/319  -13/102   28/255  -20/317    33/58   -9/857  -23/220        2   10/129    5/392   19/866]\n[ -97/945        6   19/758        9        6        6     4/39  -63/142       10       10  -41/173        9        2  -47/244    50/23   100/97        2   -63/17  -26/159   49/106        3   47/930     2/39  -60/101  -51/737        8  -83/429        8     8/51   -4/267        9        6   -51/35   19/479       10   57/694   18/259    -9/71   21/346        3        6        7        8        1        3   67/998  -32/135        3  -23/237        4]\n[ -55/993    18/83        2    5/104        6     -1/3  -24/277        7       10        7   -4/857        9        4   69/257  -94/429   13/461        6    -1/33   -27/80        9        1        2  -77/529        9  -73/870   67/524        3        9        9        8       10    9/128  -39/953   -13/58        2       10        3        2  -19/169        8   -49/41   47/817  -99/560        9        1  -54/431    -6/19       10  -97/359        9]\n[  -1/242        3        4  -21/110        6        3  -68/691        5        4        4  -35/594   68/195        8     1/17   37/908        6  -41/807        9        1        3 -100/809    -9/82       10    -7/67     2/19        7    9/166    4/737        8   -3/454        9       10        9   26/217        1   37/310        6  -20/283   -28/13  -64/685  -21/358        4        8        2   -1/852  -54/589  -77/972        5        9   -9/283]'
sage: Y4.str()
'[      1]\n[ 25/457]\n[ -11/74]\n[      9]\n[      1]\n[-72/263]\n[-93/584]\n[      1]\n[-89/703]\n[ 76/785]\n[-19/211]\n[      1]\n[      8]\n[-16/335]\n[  16/11]\n[ 44/531]\n[      1]\n[      8]\n[-13/484]\n[     10]\n[ 36/977]\n[  2/267]\n[      1]\n[  -7/93]\n[      4]\n[      5]\n[-66/775]\n[ 85/256]\n[  1/134]\n[      7]\n[      4]\n[      3]\n[ 43/869]\n[      1]\n[      9]\n[-89/531]\n[      1]\n[      4]\n[      7]\n[      6]\n[ -1/161]\n[      7]\n[     10]\n[  -4/35]\n[ 35/458]\n[      4]\n[ 13/842]\n[     10]\n[   9/74]\n[-27/388]'